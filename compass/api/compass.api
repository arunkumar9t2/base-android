public final class dev/arunkumar/android/realm/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field DEBUG_BUILD Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public fun <init> ()V
}

public abstract interface class dev/arunkumar/android/realm/PagedRealmSource : dev/arunkumar/android/realm/RealmSource {
	public abstract fun pagedItems (IIIZLkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;
}

public final class dev/arunkumar/android/realm/PagedRealmSource$DefaultImpls {
	public static fun pagedItems (Ldev/arunkumar/android/realm/PagedRealmSource;IIIZLkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun pagedItems$default (Ldev/arunkumar/android/realm/PagedRealmSource;IIIZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
}

public final class dev/arunkumar/android/realm/RealmKt {
	public static final fun DefaultRealm ()Lio/realm/Realm;
	public static final fun RealmFunction (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun RealmTransaction (Lkotlin/jvm/functions/Function1;)V
	public static final fun realm (Lkotlin/jvm/functions/Function1;)V
	public static final fun realmObservable (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lio/reactivex/Observable;
	public static synthetic fun realmObservable$default (Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/reactivex/Observable;
}

public final class dev/arunkumar/android/realm/RealmKt$sam$i$io_realm_Realm_Transaction$0 : io/realm/Realm$Transaction {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public final synthetic fun execute (Lio/realm/Realm;)V
}

public abstract interface class dev/arunkumar/android/realm/RealmSource {
}

public final class dev/arunkumar/android/realm/paging/RealmPagingSource : androidx/paging/rxjava2/RxPagingSource {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public fun getRefreshKey (Landroidx/paging/PagingState;)Ljava/lang/Integer;
	public synthetic fun getRefreshKey (Landroidx/paging/PagingState;)Ljava/lang/Object;
	public fun loadSingle (Landroidx/paging/PagingSource$LoadParams;)Lio/reactivex/Single;
}

public final class dev/arunkumar/android/realm/threading/RealmDispatcher : kotlinx/coroutines/CoroutineDispatcher {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun dispatch (Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V
	public fun isDispatchNeeded (Lkotlin/coroutines/CoroutineContext;)Z
}

public final class dev/arunkumar/android/realm/threading/RealmExecutor : dev/arunkumar/android/realm/threading/StoppableExecutor {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun execute (Ljava/lang/Runnable;)V
	public fun stop ()V
}

public final class dev/arunkumar/android/realm/threading/RealmSchedulers {
	public static final field INSTANCE Ldev/arunkumar/android/realm/threading/RealmSchedulers;
	public final fun create (Ljava/lang/String;)Ldev/arunkumar/android/transformers/CompositeTransformer;
	public static synthetic fun create$default (Ldev/arunkumar/android/realm/threading/RealmSchedulers;Ljava/lang/String;ILjava/lang/Object;)Ldev/arunkumar/android/transformers/CompositeTransformer;
}

public final class dev/arunkumar/android/realm/threading/RealmSchedulers$RealmBgCompositeTransformer : dev/arunkumar/android/transformers/CompositeTransformer {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun apply (Lio/reactivex/Completable;)Lio/reactivex/CompletableSource;
	public fun apply (Lio/reactivex/Flowable;)Lio/reactivex/Flowable;
	public synthetic fun apply (Lio/reactivex/Flowable;)Lorg/reactivestreams/Publisher;
	public fun apply (Lio/reactivex/Observable;)Lio/reactivex/ObservableSource;
	public fun apply (Lio/reactivex/Single;)Lio/reactivex/SingleSource;
}

public abstract interface class dev/arunkumar/android/realm/threading/StoppableExecutor : java/util/concurrent/Executor {
	public abstract fun stop ()V
}

