/*
 * Copyright 2021 Arunkumar
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
    google()
    jcenter()
  }
  dependencies {
    classpath libs.realmPlugin
  }
}

apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-android-extensions"
apply plugin: "realm-android"
apply plugin: "base-android-sample"

android {
  compileSdkVersion buildDetails.compileSdk

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  defaultConfig {
    applicationId "dev.arunkumar.android"
    minSdkVersion 21
    targetSdkVersion buildDetails.targetSdk

    versionCode 1
    versionName "1.0"

    vectorDrawables.useSupportLibrary = true

    multiDexEnabled true

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    debug {
      minifyEnabled false
      shrinkResources false
      debuggable true
      proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
    }
    release {
      minifyEnabled true
      shrinkResources true
      debuggable false
      proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
    }
  }

  kotlinOptions {
    jvmTarget = "1.8"
  }

  buildTypes.all { buildType ->
    buildType
      .javaCompileOptions
      .annotationProcessorOptions
      .arguments = [
      logEpoxyTimings              : "true",
      enableParallelEpoxyProcessing: "true"
    ]

  }

  ndkVersion "21.3.6528147"

  testOptions {
    unitTests {
      includeAndroidResources = true
    }
  }

  lintOptions {
    abortOnError false
  }
}

androidExtensions {
  experimental = true
}

dependencies {
  implementation fileTree(dir: "libs", include: ["*.jar"])

  implementation project(':colors')
  implementation project(':common')
  implementation project(':compass')
  implementation project(':dagger-base')
  implementation project(':dagger-viewmodel')
  implementation project(':dagger-workmanager')
  implementation project(':epoxy-rx')
  implementation project(':epoxy-utils')
  implementation project(':glide-component-icon')
  implementation project(':logging')
  implementation project(':preferences')
  implementation project(':rx-utils')
  implementation project(':spring-item-animator')

  implementation libs.workManagerRx
  implementation libs.workManagerKtx

  implementation "androidx.multidex:multidex:2.0.1"

  implementation libs.daggerAndroid
  implementation libs.daggerAndroidSupport
  kapt libs.daggerCompiler
  kapt libs.daggerAndroidProcessor
  kaptTest libs.daggerCompiler
  kaptTest libs.daggerAndroidProcessor

  // Kotlin
  implementation libs.kotlinStdLib

  // Rx
  implementation libs.rxAndroid
  implementation libs.rxKotlin
  implementation libs.rxBinding

  // Epoxy
  implementation libs.epoxyPaging
  kapt libs.epoxyProcessor

  // AndroidX
  implementation libs.androidXAppCompat
  implementation libs.constraintLayout

  // Lifecycle extensions
  implementation libs.viewmodel

  def autodispose = "1.4.0"
  implementation "com.uber.autodispose:autodispose:$autodispose"
  implementation "com.uber.autodispose:autodispose-android:$autodispose"
  implementation "com.uber.autodispose:autodispose-android-archcomponents:$autodispose"
  implementation "com.uber.autodispose:autodispose-lifecycle:$autodispose"
}
