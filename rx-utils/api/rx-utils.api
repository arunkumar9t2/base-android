public abstract class dev/arunkumar/android/AppSchedulersModule {
	public fun <init> ()V
	public abstract fun schedulerProvider (Ldev/arunkumar/android/rxschedulers/AppSchedulerProvider;)Ldev/arunkumar/android/rxschedulers/SchedulerProvider;
}

public abstract class dev/arunkumar/android/TestSchedulersModule {
	public fun <init> ()V
	public abstract fun schedulerProvider (Ldev/arunkumar/android/rxschedulers/TestSchedulerProvider;)Ldev/arunkumar/android/rxschedulers/SchedulerProvider;
}

public final class dev/arunkumar/android/result/ResourceExtKt {
	public static final fun asResource (Lio/reactivex/Flowable;Ldev/arunkumar/common/result/Resource;)Lio/reactivex/Flowable;
	public static final fun asResource (Lio/reactivex/Observable;Ldev/arunkumar/common/result/Resource;)Lio/reactivex/Observable;
	public static final fun asResource (Lio/reactivex/Single;Ldev/arunkumar/common/result/Resource;)Lio/reactivex/Observable;
	public static synthetic fun asResource$default (Lio/reactivex/Flowable;Ldev/arunkumar/common/result/Resource;ILjava/lang/Object;)Lio/reactivex/Flowable;
	public static synthetic fun asResource$default (Lio/reactivex/Observable;Ldev/arunkumar/common/result/Resource;ILjava/lang/Object;)Lio/reactivex/Observable;
	public static synthetic fun asResource$default (Lio/reactivex/Single;Ldev/arunkumar/common/result/Resource;ILjava/lang/Object;)Lio/reactivex/Observable;
}

public final class dev/arunkumar/android/rx/ExtensionsKt {
	public static final fun callableObservable (Lkotlin/jvm/functions/Function0;)Lio/reactivex/Observable;
	public static final fun completable (Lkotlin/jvm/functions/Function0;)Lio/reactivex/Completable;
	public static final fun createObservable (Lkotlin/jvm/functions/Function1;)Lio/reactivex/Observable;
	public static final fun createSingle (Lkotlin/jvm/functions/Function1;)Lio/reactivex/Single;
	public static final fun deferFlowable (Lkotlin/jvm/functions/Function0;)Lio/reactivex/Flowable;
	public static final fun deferObservable (Lkotlin/jvm/functions/Function0;)Lio/reactivex/Observable;
	public static final fun observableConcat ([Lio/reactivex/Observable;)Lio/reactivex/Observable;
}

public final class dev/arunkumar/android/rx/ExtensionsKt$sam$i$io_reactivex_functions_Action$0 : io/reactivex/functions/Action {
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final synthetic fun run ()V
}

public final class dev/arunkumar/android/rx/ExtensionsKt$sam$i$java_util_concurrent_Callable$0 : java/util/concurrent/Callable {
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final synthetic fun call ()Ljava/lang/Object;
}

public final class dev/arunkumar/android/rxschedulers/AppSchedulerProvider : dev/arunkumar/android/rxschedulers/SchedulerProvider {
	public fun <init> ()V
	public fun getIo ()Lio/reactivex/Scheduler;
	public fun getNew ()Lio/reactivex/Scheduler;
	public fun getPool ()Lio/reactivex/Scheduler;
	public fun getSingle ()Lio/reactivex/Scheduler;
	public fun getUi ()Lio/reactivex/Scheduler;
	public fun ioToUi ()Ldev/arunkumar/android/transformers/DefaultCompositeTransformer;
	public fun newToUi ()Ldev/arunkumar/android/transformers/DefaultCompositeTransformer;
	public fun poolToUi ()Ldev/arunkumar/android/transformers/DefaultCompositeTransformer;
	public fun singleToUi ()Ldev/arunkumar/android/transformers/DefaultCompositeTransformer;
}

public final class dev/arunkumar/android/rxschedulers/AppSchedulerProvider_Factory : dagger/internal/Factory {
	public fun <init> ()V
	public static fun create ()Ldev/arunkumar/android/rxschedulers/AppSchedulerProvider_Factory;
	public fun get ()Ldev/arunkumar/android/rxschedulers/AppSchedulerProvider;
	public synthetic fun get ()Ljava/lang/Object;
	public static fun newInstance ()Ldev/arunkumar/android/rxschedulers/AppSchedulerProvider;
}

public final class dev/arunkumar/android/rxschedulers/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field DEBUG_BUILD Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public fun <init> ()V
}

public final class dev/arunkumar/android/rxschedulers/ExtensionsKt {
	public static final fun toScheduler (Landroid/os/Handler;)Lio/reactivex/Scheduler;
	public static final fun toScheduler (Ljava/util/concurrent/Executor;)Lio/reactivex/Scheduler;
}

public abstract interface class dev/arunkumar/android/rxschedulers/SchedulerProvider {
	public abstract fun getIo ()Lio/reactivex/Scheduler;
	public abstract fun getNew ()Lio/reactivex/Scheduler;
	public abstract fun getPool ()Lio/reactivex/Scheduler;
	public abstract fun getSingle ()Lio/reactivex/Scheduler;
	public abstract fun getUi ()Lio/reactivex/Scheduler;
	public abstract fun ioToUi ()Ldev/arunkumar/android/transformers/DefaultCompositeTransformer;
	public abstract fun newToUi ()Ldev/arunkumar/android/transformers/DefaultCompositeTransformer;
	public abstract fun poolToUi ()Ldev/arunkumar/android/transformers/DefaultCompositeTransformer;
	public abstract fun singleToUi ()Ldev/arunkumar/android/transformers/DefaultCompositeTransformer;
}

public final class dev/arunkumar/android/rxschedulers/SchedulerProvider$DefaultImpls {
	public static fun ioToUi (Ldev/arunkumar/android/rxschedulers/SchedulerProvider;)Ldev/arunkumar/android/transformers/DefaultCompositeTransformer;
	public static fun newToUi (Ldev/arunkumar/android/rxschedulers/SchedulerProvider;)Ldev/arunkumar/android/transformers/DefaultCompositeTransformer;
	public static fun poolToUi (Ldev/arunkumar/android/rxschedulers/SchedulerProvider;)Ldev/arunkumar/android/transformers/DefaultCompositeTransformer;
	public static fun singleToUi (Ldev/arunkumar/android/rxschedulers/SchedulerProvider;)Ldev/arunkumar/android/transformers/DefaultCompositeTransformer;
}

public final class dev/arunkumar/android/rxschedulers/TestSchedulerProvider : dev/arunkumar/android/rxschedulers/SchedulerProvider {
	public fun <init> ()V
	public fun getIo ()Lio/reactivex/Scheduler;
	public fun getNew ()Lio/reactivex/Scheduler;
	public fun getPool ()Lio/reactivex/Scheduler;
	public fun getSingle ()Lio/reactivex/Scheduler;
	public fun getUi ()Lio/reactivex/Scheduler;
	public fun ioToUi ()Ldev/arunkumar/android/transformers/DefaultCompositeTransformer;
	public fun newToUi ()Ldev/arunkumar/android/transformers/DefaultCompositeTransformer;
	public fun poolToUi ()Ldev/arunkumar/android/transformers/DefaultCompositeTransformer;
	public fun singleToUi ()Ldev/arunkumar/android/transformers/DefaultCompositeTransformer;
}

public final class dev/arunkumar/android/rxschedulers/TestSchedulerProvider_Factory : dagger/internal/Factory {
	public fun <init> ()V
	public static fun create ()Ldev/arunkumar/android/rxschedulers/TestSchedulerProvider_Factory;
	public fun get ()Ldev/arunkumar/android/rxschedulers/TestSchedulerProvider;
	public synthetic fun get ()Ljava/lang/Object;
	public static fun newInstance ()Ldev/arunkumar/android/rxschedulers/TestSchedulerProvider;
}

public abstract interface class dev/arunkumar/android/transformers/CompositeTransformer : io/reactivex/CompletableTransformer, io/reactivex/FlowableTransformer, io/reactivex/ObservableTransformer, io/reactivex/SingleTransformer {
}

public final class dev/arunkumar/android/transformers/DefaultCompositeTransformer : dev/arunkumar/android/transformers/CompositeTransformer {
	public fun <init> (Lio/reactivex/Scheduler;Lio/reactivex/Scheduler;)V
	public fun apply (Lio/reactivex/Completable;)Lio/reactivex/CompletableSource;
	public fun apply (Lio/reactivex/Flowable;)Lorg/reactivestreams/Publisher;
	public fun apply (Lio/reactivex/Observable;)Lio/reactivex/ObservableSource;
	public fun apply (Lio/reactivex/Single;)Lio/reactivex/SingleSource;
}

